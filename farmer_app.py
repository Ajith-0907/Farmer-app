import streamlit as st

st.set_page_config(page_title="‡∞∞‡±à‡∞§‡±Å ‡∞∏‡∞π‡∞æ‡∞Ø‡∞ï ‡∞ö‡∞æ‡∞ü‡±ç‚Äå‡∞¨‡∞æ‡∞ü‡±ç", layout="wide")

# Static crop prices and trend (simulated)
crop_prices = {
    "‡∞µ‡∞∞‡∞ø (Rice)": (2100, "‚¨ÜÔ∏è", 2020),
    "‡∞ï‡∞æ‡∞ü‡∞®‡±ç (Cotton)": (6200, "‚¨áÔ∏è", 6300),
    "‡∞Æ‡∞ø‡∞∞‡∞™ (Chilli)": (9000, "‚¨ÜÔ∏è", 8800),
    "‡∞ú‡±ä‡∞®‡±ç‡∞® (Jowar)": (2500, "‚¨áÔ∏è", 2600),
    "‡∞∏‡±Ü‡∞®‡∞ó (Chana)": (5400, "‚¨ÜÔ∏è", 5300)
}

# Crop-specific help with updated verified YouTube links
crop_tips = {
    "‡∞µ‡∞∞‡∞ø (Rice)": (
        "‡∞™‡±Å‡∞∞‡±Å‡∞ó‡±Å ‡∞®‡∞ø‡∞µ‡∞æ‡∞∞‡∞£‡∞ï‡±Å: ‡∞ï‡∞æ‡∞∞‡±ç‡∞ü‡∞æ‡∞™‡±ç ‡∞π‡±à‡∞°‡±ç‡∞∞‡±ã‡∞ï‡±ç‡∞≤‡±ã‡∞∞‡±à‡∞°‡±ç, ‡∞Æ‡∞æ‡∞Ç‡∞ï‡±ã‡∞ú‡±Ü‡∞¨‡±ç.<br>"
        "<a href='https://www.youtube.com/watch?v=TYY3pe5pNCU' target='_blank'>üåæ Rice Cultivation Video</a>"
    ),
    "‡∞ï‡∞æ‡∞ü‡∞®‡±ç (Cotton)": (
        "‡∞ï‡∞æ‡∞ü‡∞®‡±ç ‡∞µ‡±ç‡∞Ø‡∞æ‡∞ß‡±Å‡∞≤ ‡∞®‡∞ø‡∞µ‡∞æ‡∞∞‡∞£‡∞ï‡±Å: neem oil, imidacloprid.<br>"
        "<a href='https://www.youtube.com/watch?v=SJPLi2AJifA' target='_blank'>üß™ Cotton Pest Control</a>"
    ),
    "‡∞Æ‡∞ø‡∞∞‡∞™ (Chilli)": (
        "‡∞Æ‡∞ø‡∞∞‡∞™ ‡∞ö‡±á‡∞≤‡±ã ‡∞´‡∞Ç‡∞ó‡∞≤‡±ç ‡∞µ‡±ç‡∞Ø‡∞æ‡∞ß‡±Å‡∞≤ ‡∞®‡∞ø‡∞µ‡∞æ‡∞∞‡∞£‡∞ï‡±Å: carbendazim, azoxystrobin.<br>"
        "<a href='https://www.youtube.com/watch?v=bDKs4YvVPc4' target='_blank'>üå∂Ô∏è Chilli Farming Process</a>"
    ),
    "‡∞ú‡±ä‡∞®‡±ç‡∞® (Jowar)": (
        "‡∞ú‡±ä‡∞®‡±ç‡∞®‡∞ï‡±Å neem spray ‡∞µ‡∞æ‡∞°‡∞æ‡∞≤‡∞ø.<br>"
        "<a href='https://www.youtube.com/watch?v=spTvur2Pvqg' target='_blank'>üåΩ Jowar Farming Process</a>"
    ),
    "‡∞∏‡±Ü‡∞®‡∞ó (Chana)": (
        "‡∞∏‡±Ü‡∞®‡∞ó‡∞ï‡±Å early blight ‡∞®‡∞ø‡∞µ‡∞æ‡∞∞‡∞£‡∞ï‡±Å Mancozeb ‡∞µ‡∞æ‡∞°‡∞Ç‡∞°‡∞ø.<br>"
        "<a href='https://www.youtube.com/watch?v=qs2JnBFYcdw' target='_blank'>ü•ú Chana Farming Guide</a>"
    )
}

# Chatbot response logic (unchanged)
def get_response(message):
    message = message.lower()
    if any(word in message for word in ["‡∞π‡∞æ‡∞Ø‡±ç", "‡∞π‡∞≤‡±ã", "‡∞®‡∞Æ‡∞∏‡±ç‡∞§‡±á"]):
        return "‡∞π‡∞≤‡±ã! ‡∞®‡±á‡∞®‡±Å ‡∞Æ‡±Ä ‡∞µ‡±ç‡∞Ø‡∞µ‡∞∏‡∞æ‡∞Ø ‡∞∏‡∞π‡∞æ‡∞Ø‡∞ï‡±Å‡∞°‡±Å. ‡∞é‡∞≤‡∞æ ‡∞∏‡∞π‡∞æ‡∞Ø‡∞Ç ‡∞ö‡±á‡∞Ø‡∞ó‡∞≤‡∞®‡±Å?"
    if any(word in message for word in ["‡∞ß‡∞®‡±ç‡∞Ø‡∞µ‡∞æ‡∞¶‡∞æ‡∞≤‡±Å", "‡∞ß‡∞®‡±ç‡∞Ø‡∞µ‡∞æ‡∞¶‡∞Ç", "‡∞•‡±ç‡∞Ø‡∞æ‡∞Ç‡∞ï‡±ç‡∞∏‡±ç"]):
        return "‡∞Æ‡±Ä‡∞ï‡±Å ‡∞∏‡±ç‡∞µ‡∞æ‡∞ó‡∞§‡∞Ç! ‡∞á‡∞Ç‡∞ï‡∞æ ‡∞è‡∞µ‡±à‡∞®‡∞æ ‡∞∏‡∞Ç‡∞¶‡±á‡∞π‡∞æ‡∞≤‡±Å ‡∞â‡∞®‡±ç‡∞®‡∞æ‡∞Ø‡∞æ?"

    general_responses = {
        "‡∞™‡±Å‡∞∞‡±Å‡∞ó‡±Å": "‡∞™‡±Å‡∞∞‡±Å‡∞ó‡±Å‡∞≤ ‡∞®‡∞ø‡∞µ‡∞æ‡∞∞‡∞£‡∞ï‡±Å ‡∞∏‡±á‡∞Ç‡∞¶‡±ç‡∞∞‡∞ø‡∞Ø ‡∞®‡∞ø‡∞Æ‡±ç‡∞Æ ‡∞Ü‡∞Ø‡∞ø‡∞≤‡±ç ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞¨‡∞µ‡±á‡∞∞‡∞ø‡∞Ø‡∞æ ‡∞¨‡∞æ‡∞∏‡∞ø‡∞Ø‡∞æ‡∞®‡∞æ ‡∞µ‡∞æ‡∞°‡∞°‡∞Ç ‡∞Æ‡∞Ç‡∞ö‡∞ø‡∞¶‡∞ø.",
        "‡∞µ‡±ç‡∞Ø‡∞æ‡∞ß‡∞ø": "‡∞µ‡±ç‡∞Ø‡∞æ‡∞ß‡±Å‡∞≤ ‡∞®‡∞ø‡∞µ‡∞æ‡∞∞‡∞£‡∞ï‡±Å ‡∞Æ‡∞æ‡∞Ç‡∞ï‡±ã‡∞ú‡±Ü‡∞¨‡±ç ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞ï‡∞æ‡∞™‡∞∞‡±ç ‡∞Ü‡∞ï‡±ç‡∞∏‡±Ä‡∞ï‡±ç‡∞≤‡±ã‡∞∞‡±à‡∞°‡±ç ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞ø‡∞Ç‡∞ö‡∞µ‡∞ö‡±ç‡∞ö‡±Å.",
        "‡∞é‡∞∞‡±Å‡∞µ‡±Å": "‡∞™‡∞Ç‡∞ü‡∞≤‡∞ï‡±Å ‡∞Ö‡∞µ‡∞∏‡∞∞‡∞Æ‡±à‡∞® ‡∞é‡∞∞‡±Å‡∞µ‡±Å‡∞≤‡±Å: ‡∞Ø‡±Ç‡∞∞‡∞ø‡∞Ø‡∞æ, DAP ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞∏‡±Ç‡∞™‡∞∞‡±ç ‡∞´‡∞æ‡∞∏‡±ç‡∞´‡±á‡∞ü‡±ç.",
        "‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£‡∞Ç": "‡∞™‡±ç‡∞∞‡∞∏‡±ç‡∞§‡±Å‡∞§ ‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£ ‡∞™‡∞∞‡∞ø‡∞∏‡±ç‡∞•‡∞ø‡∞§‡±Å‡∞≤‡∞®‡±Å ‡∞Ö‡∞®‡±Å‡∞∏‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ø ‡∞∏‡∞æ‡∞ó‡±Å ‡∞ö‡±á‡∞Ø‡∞°‡∞Ç ‡∞â‡∞§‡±ç‡∞§‡∞Æ‡∞Ç.",
        "‡∞®‡±Ä‡∞∞‡±Å": "‡∞®‡±Ä‡∞ü‡∞ø‡∞®‡∞ø ‡∞∏‡∞Æ‡∞∞‡±ç‡∞•‡∞µ‡∞Ç‡∞§‡∞Ç‡∞ó‡∞æ ‡∞µ‡∞æ‡∞°‡±á‡∞Ç‡∞¶‡±Å‡∞ï‡±Å ‡∞°‡±ç‡∞∞‡∞ø‡∞™‡±ç ‡∞≤‡±á‡∞¶‡∞æ ‡∞∏‡±ç‡∞™‡±ç‡∞∞‡∞ø‡∞Ç‡∞ï‡±ç‡∞≤‡∞∞‡±ç ‡∞™‡∞¶‡±ç‡∞ß‡∞§‡±Å‡∞≤‡±Å ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø.",
        "drip": "‡∞°‡±ç‡∞∞‡∞ø‡∞™‡±ç ‡∞á‡∞∞‡∞ø‡∞ó‡±á‡∞∑‡∞®‡±ç ‡∞®‡±Ä‡∞ü‡∞ø ‡∞µ‡∞ø‡∞®‡∞ø‡∞Ø‡±ã‡∞ó‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞§‡∞ó‡±ç‡∞ó‡∞ø‡∞Ç‡∞ö‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞¶‡∞ø‡∞ó‡±Å‡∞¨‡∞°‡∞ø ‡∞™‡±Ü‡∞Ç‡∞ö‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞∏‡∞π‡∞æ‡∞Ø‡∞™‡∞°‡±Å‡∞§‡±Å‡∞Ç‡∞¶‡∞ø.",
        "sprinkler": "‡∞∏‡±ç‡∞™‡±ç‡∞∞‡∞ø‡∞Ç‡∞ï‡±ç‡∞≤‡∞∞‡±ç ‡∞™‡∞¶‡±ç‡∞ß‡∞§‡∞ø ‡∞∏‡∞Æ‡∞æ‡∞®‡∞Ç‡∞ó‡∞æ ‡∞®‡±Ä‡∞∞‡±Å ‡∞™‡∞Ç‡∞™‡∞ø‡∞£‡±Ä ‡∞ö‡±á‡∞∏‡±ç‡∞§‡±Å‡∞Ç‡∞¶‡∞ø ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞™‡±ä‡∞≤‡∞Ç ‡∞ï‡±ã‡∞∏‡∞Ç ‡∞Æ‡∞Ç‡∞ö‡∞ø‡∞¶‡∞ø.",
        "water": "‡∞®‡±Ä‡∞ü‡∞ø ‡∞™‡±ä‡∞¶‡±Å‡∞™‡±Å ‡∞™‡∞¶‡±ç‡∞ß‡∞§‡±Å‡∞≤ ‡∞µ‡∞æ‡∞°‡∞ï‡∞Ç ‡∞Ö‡∞®‡∞ø‡∞µ‡∞æ‡∞∞‡±ç‡∞Ø‡∞Ç. ‡∞°‡±ç‡∞∞‡∞ø‡∞™‡±ç, ‡∞∏‡±ç‡∞™‡±ç‡∞∞‡∞ø‡∞Ç‡∞ï‡±ç‡∞≤‡∞∞‡±ç ‡∞µ‡∞Ç‡∞ü‡∞ø‡∞µ‡∞ø ‡∞â‡∞™‡∞Ø‡±Å‡∞ï‡±ç‡∞§‡∞Ç.",
        "irrigation": "‡∞á‡∞∞‡∞ø‡∞ó‡±á‡∞∑‡∞®‡±ç ‡∞™‡∞¶‡±ç‡∞ß‡∞§‡±Å‡∞≤‡±Å ‡∞Æ‡±Ä ‡∞™‡±ä‡∞≤‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞∏‡∞∞‡∞ø‡∞™‡±ã‡∞Ø‡±á ‡∞µ‡∞ø‡∞ß‡∞Ç‡∞ó‡∞æ ‡∞é‡∞Ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø ‚Äî ‡∞°‡±ç‡∞∞‡∞ø‡∞™‡±ç, ‡∞´‡∞∞‡±ç‚Äå‡∞∞‡±ã, ‡∞∏‡±ç‡∞™‡±ç‡∞∞‡∞ø‡∞Ç‡∞ï‡±ç‡∞≤‡∞∞‡±ç."
    }

    general_links = {
        "‡∞™‡±Å‡∞∞‡±Å‡∞ó‡±Å": "<br><a href='https://www.youtube.com/watch?v=tyqsbE8hslE' target='_blank'>üëâ ‡∞™‡±Å‡∞∞‡±Å‡∞ó‡±Å ‡∞®‡∞ø‡∞µ‡∞æ‡∞∞‡∞£ ‡∞µ‡±Ä‡∞°‡∞ø‡∞Ø‡±ã</a>",
        "‡∞µ‡±ç‡∞Ø‡∞æ‡∞ß‡∞ø": "<br><a href='https://www.youtube.com/watch?v=tDrx4Qgk1XE' target='_blank'>üëâ ‡∞µ‡±ç‡∞Ø‡∞æ‡∞ß‡∞ø ‡∞®‡∞ø‡∞µ‡∞æ‡∞∞‡∞£ ‡∞µ‡±Ä‡∞°‡∞ø‡∞Ø‡±ã</a>",
        "‡∞é‡∞∞‡±Å‡∞µ‡±Å": "<br><a href='https://www.youtube.com/watch?v=epMl43O3gts' target='_blank'>üëâ ‡∞é‡∞∞‡±Å‡∞µ‡±Å‡∞≤ ‡∞∏‡∞Æ‡∞æ‡∞ö‡∞æ‡∞∞‡∞Ç ‡∞µ‡±Ä‡∞°‡∞ø‡∞Ø‡±ã</a>",
        "‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£‡∞Ç": "<br><a href='https://www.youtube.com/watch?v=majAdTK7758' target='_blank'>üëâ ‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£ ‡∞∏‡±Ç‡∞ö‡∞®‡∞≤‡±Å ‡∞µ‡±Ä‡∞°‡∞ø‡∞Ø‡±ã</a>",
        "‡∞®‡±Ä‡∞∞‡±Å": "<br><a href='https://www.youtube.com/watch?v=6At-n-B1Bjc' target='_blank'>üëâ ‡∞®‡±Ä‡∞ü‡∞ø‡∞™‡∞æ‡∞∞‡±Å‡∞¶‡∞≤ ‡∞µ‡±Ä‡∞°‡∞ø‡∞Ø‡±ã</a>",
        "drip": "<br><a href='https://www.youtube.com/watch?v=ikAoMn93mEw' target='_blank'>üëâ Drip Irrigation System Video</a>"
    }

    keyword_pool = {
        "‡∞™‡±Å‡∞∞‡±Å‡∞ó‡±Å": ["‡∞™‡±Å‡∞∞‡±Å‡∞ó‡±Å", "‡∞á‡∞®‡±ç‡∞∏‡±Ü‡∞ï‡±ç‡∞ü‡±ç", "‡∞ö‡±Ü‡±ñ‡∞§‡±Ç", "‡∞Ü‡∞´‡∞ø‡∞°‡±ç‡∞∏‡±ç"],
        "‡∞µ‡±ç‡∞Ø‡∞æ‡∞ß‡∞ø": ["‡∞µ‡±ç‡∞Ø‡∞æ‡∞ß‡∞ø", "‡∞´‡∞Ç‡∞ó‡∞∏‡±ç", "‡∞¨‡±ç‡∞≤‡±à‡∞ü‡±ç", "‡∞µ‡∞ø‡∞≤‡±ç‡∞ü‡∞ø‡∞Ç‡∞ó‡±ç"],
        "‡∞é‡∞∞‡±Å‡∞µ‡±Å": ["‡∞é‡∞∞‡±Å‡∞µ‡±Å", "‡∞™‡±ã‡∞∑‡∞ï‡∞æ‡∞≤‡±Å", "‡∞´‡±Ü‡∞∞‡±ç‡∞ü‡∞ø‡∞≤‡±à‡∞ú‡∞∞‡±ç", "‡∞Ø‡±Ç‡∞∞‡∞ø‡∞Ø‡∞æ"],
        "‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£‡∞Ç": ["‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£‡∞Ç", "‡∞µ‡∞∞‡±ç‡∞∑‡∞Ç", "‡∞ï‡∞∞‡±Å‡∞µ‡±Å", "‡∞Æ‡±å‡∞∏‡∞Æ‡±ç"],
        "‡∞®‡±Ä‡∞∞‡±Å": ["‡∞®‡±Ä‡∞∞‡±Å", "‡∞°‡±ç‡∞∞‡∞ø‡∞™‡±ç", "‡∞á‡∞∞‡∞ø‡∞ó‡±á‡∞∑‡∞®‡±ç", "sprinkler", "‡∞™‡∞Ç‡∞™‡∞ø‡∞£‡±Ä"],
        "drip": ["‡∞°‡±ç‡∞∞‡∞ø‡∞™‡±ç", "‡∞°‡±ç‡∞∞‡∞ø‡∞™‡±ç ‡∞á‡∞∞‡∞ø‡∞ó‡±á‡∞∑‡∞®‡±ç"],
        "sprinkler": ["‡∞∏‡±ç‡∞™‡±ç‡∞∞‡∞ø‡∞Ç‡∞ï‡±ç‡∞≤‡∞∞‡±ç"],
        "water": ["‡∞®‡±Ä‡∞∞‡±Å", "‡∞®‡±Ä‡∞ü‡∞ø ‡∞™‡∞Ç‡∞™‡∞ø‡∞£‡±Ä"],
        "irrigation": ["‡∞á‡∞∞‡∞ø‡∞ó‡±á‡∞∑‡∞®‡±ç", "‡∞®‡±Ä‡∞ü‡∞ø ‡∞™‡∞¶‡±ç‡∞ß‡∞§‡±Å‡∞≤‡±Å"]
    }

    for key, keywords in keyword_pool.items():
        if any(kw in message for kw in keywords):
            return general_responses[key] + general_links.get(key, "")

    for crop, details in crop_tips.items():
        crop_keywords = crop.lower().replace("(", "").replace(")", "").split()
        if any(word in message for word in crop_keywords):
            return details

    return "‡∞ï‡±ç‡∞∑‡∞Æ‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø, ‡∞Æ‡±Ä ‡∞™‡±ç‡∞∞‡∞∂‡±ç‡∞®‡∞ï‡±Å ‡∞∏‡∞∞‡±à‡∞® ‡∞∏‡∞Æ‡∞æ‡∞ö‡∞æ‡∞∞‡∞Ç ‡∞≤‡∞≠‡∞ø‡∞Ç‡∞ö‡∞≤‡±á‡∞¶‡±Å. ‡∞Æ‡±Ä‡∞∞‡±Å ‡∞Æ‡∞∞‡±ã ‡∞∞‡±Ä‡∞§‡∞ø‡∞≤‡±ã ‡∞™‡±ç‡∞∞‡∞Ø‡∞§‡±ç‡∞®‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø ‡∞≤‡±á‡∞¶‡∞æ ‡∞ï‡±ç‡∞∞‡∞ø‡∞Ç‡∞¶ ‡∞â‡∞®‡±ç‡∞® ‡∞™‡∞Ç‡∞ü‡∞≤ ‡∞ú‡∞æ‡∞¨‡∞ø‡∞§‡∞æ ‡∞ö‡±Ç‡∞°‡∞Ç‡∞°‡∞ø."

# Layout
st.title("üåæ ‡∞∞‡±à‡∞§‡±Å ‡∞∏‡∞π‡∞æ‡∞Ø‡∞ï ‡∞ö‡∞æ‡∞ü‡±ç‚Äå‡∞¨‡∞æ‡∞ü‡±ç")
col1, col2 = st.columns([3, 1])

with col1:
    st.markdown("""
    <style>
body, .stApp {
    background-color: #f9f9f9;
    color: #111;
}
.chat-bubble {
    border-radius: 15px;
    padding: 10px 15px;
    margin: 10px 0;
    display: inline-block;
    max-width: 80%;
    font-size: 0.9rem;
}
.user {
    background-color: #d0e8ff;
    color: #000;
    margin-left: auto;
    text-align: right;
    border-bottom-right-radius: 5px;
}
.bot {
    background-color: #f1f1f1;
    color: #000;
    margin-right: auto;
    text-align: left;
    border-bottom-left-radius: 5px;
}
</style>
    """, unsafe_allow_html=True)

    if "messages" not in st.session_state:
        st.session_state.messages = []

    user_input = st.chat_input("‡∞Æ‡±Ä ‡∞™‡±ç‡∞∞‡∞∂‡±ç‡∞®‡∞®‡±Å ‡∞á‡∞ï‡±ç‡∞ï‡∞° ‡∞ü‡±à‡∞™‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø...")
    if user_input:
        st.session_state.messages.append(("user", user_input))
        st.session_state.messages.append(("bot", get_response(user_input)))

    for role, text in st.session_state.messages:
        css_class = "user" if role == "user" else "bot"
        st.markdown(f"<div class='chat-bubble {css_class}'>{text}</div>", unsafe_allow_html=True)

with col2:
    st.markdown("## üìå ‡∞™‡∞Ç‡∞ü‡∞≤‡±Å")
    for crop, tip in crop_tips.items():
        with st.expander(crop):
            st.markdown(tip, unsafe_allow_html=True)
            price, trend, yesterday = crop_prices.get(crop, ("‚Äì", "", "‚Äì"))
            st.markdown(f"<small><b>‡∞™‡±ç‡∞∞‡∞∏‡±ç‡∞§‡±Å‡∞§ ‡∞ß‡∞∞:</b> ‚Çπ{price} {trend} (‡∞®‡∞ø‡∞®‡±ç‡∞® ‚Çπ{yesterday})</small>", unsafe_allow_html=True)
