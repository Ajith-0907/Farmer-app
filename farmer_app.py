import streamlit as st

st.set_page_config(page_title="‡∞∞‡±à‡∞§‡±Å ‡∞∏‡∞π‡∞æ‡∞Ø‡∞ï ‡∞ö‡∞æ‡∞ü‡±ç‚Äå‡∞¨‡∞æ‡∞ü‡±ç", layout="wide")

# Knowledge base with updated YouTube links (verified)
knowledge_base = {
    "pests": {
        "keywords": ["‡∞™‡±Ü‡∞∏‡±ç‡∞ü‡±ç", "‡∞™‡±Å‡∞∞‡±Å‡∞ó‡±Å‡∞≤‡±Å", "‡∞á‡∞®‡±ç‡∞∏‡±Ü‡∞ï‡±ç‡∞ü‡±ç", "‡∞á‡∞®‡±ç‡∞´‡±Ü‡∞∏‡±ç‡∞ü‡±á‡∞∑‡∞®‡±ç"],
        "response": "‡∞∏‡∞æ‡∞ß‡∞æ‡∞∞‡∞£ ‡∞™‡±Å‡∞∞‡±Å‡∞ó‡±Å‡∞≤‡±ç‡∞≤‡±ã ‡∞Ü‡∞´‡∞ø‡∞°‡±ç‡∞∏‡±ç, ‡∞ö‡±Ü‡±ñ‡∞§‡±Ç‡∞®‡∞ø‡∞∞‡±Å‡∞ó‡±Å‡∞≤‡±Å, ‡∞¨‡±Ä‡∞ü‡±ç‚Äå‡∞≤‡±ç‡∞∏‡±ç ‡∞â‡∞Ç‡∞ü‡∞æ‡∞Ø‡∞ø. ‡∞®‡∞ø‡∞µ‡∞æ‡∞∞‡∞£‡∞ï‡±Å: ‡∞®‡±Ä‡∞Æ‡±ç ‡∞Ü‡∞Ø‡∞ø‡∞≤‡±ç, ‡∞ü‡±ç‡∞∞‡±à‡∞ï‡±ã‡∞ó‡±ç‡∞∞‡∞æ‡∞Æ‡∞æ, ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞¨‡∞µ‡±á‡∞∞‡∞ø‡∞Ø‡∞æ ‡∞¨‡∞æ‡∞∏‡∞ø‡∞Ø‡∞æ‡∞®‡∞æ. [üëâ ‡∞™‡±Å‡∞∞‡±Å‡∞ó‡±Å ‡∞®‡∞ø‡∞µ‡∞æ‡∞∞‡∞£ ‡∞µ‡±Ä‡∞°‡∞ø‡∞Ø‡±ã](https://www.youtube.com/watch?v=AieFCNubgVg)"
    },
    "diseases": {
        "keywords": ["‡∞µ‡±ç‡∞Ø‡∞æ‡∞ß‡∞ø", "‡∞´‡∞Ç‡∞ó‡∞∏‡±ç", "‡∞¨‡±ç‡∞≤‡±à‡∞ü‡±ç", "‡∞∞‡∞æ‡∞ü‡±ç", "‡∞µ‡∞ø‡∞≤‡±ç‡∞ü‡∞ø‡∞Ç‡∞ó‡±ç"],
        "response": "‡∞µ‡±ç‡∞Ø‡∞æ‡∞ß‡±Å‡∞≤ ‡∞®‡∞ø‡∞µ‡∞æ‡∞∞‡∞£‡∞ï‡±Å: ‡∞ï‡∞æ‡∞∞‡±ç‡∞¨‡±Ü‡∞Ç‡∞°‡∞ú‡∞ø‡∞Æ‡±ç, ‡∞Æ‡∞æ‡∞Ç‡∞ï‡±ã‡∞ú‡±Ü‡∞¨‡±ç, ‡∞ï‡∞æ‡∞™‡∞∞‡±ç ‡∞Ü‡∞ï‡±ç‡∞∏‡±Ä‡∞ï‡±ç‡∞≤‡±ã‡∞∞‡±à‡∞°‡±ç ‡∞µ‡∞æ‡∞°‡∞µ‡∞ö‡±ç‡∞ö‡±Å. [üëâ ‡∞µ‡±ç‡∞Ø‡∞æ‡∞ß‡∞ø ‡∞®‡∞ø‡∞µ‡∞æ‡∞∞‡∞£ ‡∞µ‡±Ä‡∞°‡∞ø‡∞Ø‡±ã](https://www.youtube.com/watch?v=tDrx4Qgk1XE)"
    },
    "fertilizer": {
        "keywords": ["‡∞´‡±Ü‡∞∞‡±ç‡∞ü‡∞ø‡∞≤‡±à‡∞ú‡∞∞‡±ç", "‡∞™‡±ã‡∞∑‡∞ï‡∞æ‡∞≤‡±Å", "‡∞é‡∞®‡±ç‚Äå‡∞™‡±Ä‡∞ï‡±á", "‡∞Æ‡∞®‡∞Ç", "‡∞ï‡∞æ‡∞Ç‡∞™‡±ã‡∞∏‡±ç‡∞ü‡±ç"],
        "response": "‡∞∏‡∞æ‡∞ß‡∞æ‡∞∞‡∞£‡∞Ç‡∞ó‡∞æ ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞ø‡∞Ç‡∞ö‡±á ‡∞é‡∞∞‡±Å‡∞µ‡±Å‡∞≤‡±Å: 10-26-26, ‡∞Ø‡±Ç‡∞∞‡∞ø‡∞Ø‡∞æ, ‡∞∏‡±Ç‡∞™‡∞∞‡±ç ‡∞´‡∞æ‡∞∏‡±ç‡∞´‡±á‡∞ü‡±ç. [üëâ ‡∞é‡∞∞‡±Å‡∞µ‡±Å‡∞≤ ‡∞µ‡±Ä‡∞°‡∞ø‡∞Ø‡±ã](https://www.youtube.com/watch?v=epMl43O3gts)"
    },
    "weather": {
        "keywords": ["‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£‡∞Ç", "‡∞µ‡∞∞‡±ç‡∞∑‡∞Ç", "‡∞ï‡∞∞‡±Å‡∞µ‡±Å", "‡∞ö‡∞≤‡∞ø‡∞ï‡∞æ‡∞≤‡∞Ç"],
        "response": "‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞ó‡∞Æ‡∞®‡∞ø‡∞∏‡±ç‡∞§‡±Ç ‡∞∏‡∞æ‡∞ó‡±Å ‡∞™‡±ç‡∞≤‡∞æ‡∞®‡±ç ‡∞ö‡±á‡∞∏‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø. ‡∞µ‡∞∞‡±ç‡∞∑‡∞æ‡∞ï‡∞æ‡∞≤‡∞Ç ‡∞≤‡±ã ‡∞Æ‡±Å‡∞∞‡±Å‡∞ó‡±Å ‡∞®‡±Ä‡∞∞‡±Å ‡∞®‡∞ø‡∞≤‡∞µ‡∞ï‡±Å‡∞Ç‡∞°‡∞æ ‡∞ö‡±Ç‡∞°‡∞æ‡∞≤‡∞ø. [üëâ ‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£ ‡∞∏‡±Ç‡∞ö‡∞®‡∞≤‡±Å](https://www.youtube.com/watch?v=tE1jvpwmyiU)"
    },
    "crop selection": {
        "keywords": ["‡∞™‡∞Ç‡∞ü", "‡∞µ‡∞ø‡∞§‡±ç‡∞§‡∞®‡∞æ‡∞≤‡±Å", "‡∞é‡∞Ç‡∞™‡∞ø‡∞ï", "‡∞ï‡±É‡∞∑‡∞ø"],
        "response": "‡∞™‡∞Ç‡∞ü ‡∞é‡∞Ç‡∞™‡∞ø‡∞ï ‡∞Æ‡∞ü‡±ç‡∞ü‡∞ø, ‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£‡∞Ç, ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞Æ‡∞æ‡∞∞‡±ç‡∞ï‡±Ü‡∞ü‡±ç ‡∞Ö‡∞µ‡∞∏‡∞∞‡∞æ‡∞≤ ‡∞Ü‡∞ß‡∞æ‡∞∞‡∞Ç‡∞ó‡∞æ ‡∞â‡∞Ç‡∞°‡∞æ‡∞≤‡∞ø. [üëâ ‡∞™‡∞Ç‡∞ü ‡∞é‡∞Ç‡∞™‡∞ø‡∞ï ‡∞µ‡±Ä‡∞°‡∞ø‡∞Ø‡±ã](https://www.youtube.com/watch?v=5CvWyCGZKoo)"
    },
    "irrigation": {
        "keywords": ["‡∞®‡±Ä‡∞∞‡±Å", "‡∞á‡∞∞‡∞ø‡∞ó‡±á‡∞∑‡∞®‡±ç", "‡∞°‡±ç‡∞∞‡∞ø‡∞™‡±ç", "‡∞∏‡±ç‡∞™‡±ç‡∞∞‡∞ø‡∞Ç‡∞ï‡±ç‡∞≤‡∞∞‡±ç"],
        "response": "‡∞°‡±ç‡∞∞‡∞ø‡∞™‡±ç, ‡∞∏‡±ç‡∞™‡±ç‡∞∞‡∞ø‡∞Ç‡∞ï‡±ç‡∞≤‡∞∞‡±ç, ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å furrow irrigation ‡∞™‡∞¶‡±ç‡∞ß‡∞§‡±Å‡∞≤‡±Å ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø. [üëâ ‡∞®‡±Ä‡∞ü‡∞ø‡∞™‡∞æ‡∞∞‡±Å‡∞¶‡∞≤ ‡∞µ‡±Ä‡∞°‡∞ø‡∞Ø‡±ã](https://www.youtube.com/watch?v=6At-n-B1Bjc)"
    },
    "default": {
        "response": "‡∞ï‡±ç‡∞∑‡∞Æ‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø, ‡∞®‡±á‡∞®‡±Å ‡∞Æ‡±Ä ‡∞™‡±ç‡∞∞‡∞∂‡±ç‡∞®‡∞®‡±Å ‡∞Ö‡∞∞‡±ç‡∞•‡∞Ç ‡∞ö‡±á‡∞∏‡±Å‡∞ï‡±ã‡∞≤‡±á‡∞ï‡∞™‡±ã‡∞Ø‡∞æ‡∞®‡±Å. ‡∞¶‡∞Ø‡∞ö‡±á‡∞∏‡∞ø ‡∞™‡±Å‡∞∞‡±Å‡∞ó‡±Å‡∞≤‡±Å, ‡∞µ‡±ç‡∞Ø‡∞æ‡∞ß‡±Å‡∞≤‡±Å, ‡∞é‡∞∞‡±Å‡∞µ‡±Å‡∞≤‡±Å, ‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£‡∞Ç, ‡∞™‡∞Ç‡∞ü ‡∞é‡∞Ç‡∞™‡∞ø‡∞ï ‡∞≤‡±á‡∞¶‡∞æ ‡∞®‡±Ä‡∞ü‡∞ø‡∞™‡∞æ‡∞∞‡±Å‡∞¶‡∞≤ ‡∞ó‡±Å‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ø ‡∞Ö‡∞°‡∞ó‡∞Ç‡∞°‡∞ø."
    }
}

# Crop-specific help with verified videos
crop_tips = {
    "‡∞µ‡∞∞‡∞ø (Rice)": (
        "‡∞™‡±Å‡∞∞‡±Å‡∞ó‡±Å ‡∞®‡∞ø‡∞µ‡∞æ‡∞∞‡∞£‡∞ï‡±Å: ‡∞ï‡∞æ‡∞∞‡±ç‡∞ü‡∞æ‡∞™‡±ç ‡∞π‡±à‡∞°‡±ç‡∞∞‡±ã‡∞ï‡±ç‡∞≤‡±ã‡∞∞‡±à‡∞°‡±ç, ‡∞Æ‡∞æ‡∞Ç‡∞ï‡±ã‡∞ú‡±Ü‡∞¨‡±ç.\n"
        "[üåæ Rice Cultivation Video 1](https://www.youtube.com/watch?v=TYY3pe5pNCU)\n"
        "[üå± Rice Farming A to Z](https://www.youtube.com/watch?v=E7kulTuVItQ)"
    ),
    "‡∞ï‡∞æ‡∞ü‡∞®‡±ç (Cotton)": (
        "‡∞ï‡∞æ‡∞ü‡∞®‡±ç ‡∞µ‡±ç‡∞Ø‡∞æ‡∞ß‡±Å‡∞≤ ‡∞®‡∞ø‡∞µ‡∞æ‡∞∞‡∞£‡∞ï‡±Å: neem oil, imidacloprid.\n"
        "[üß™ Cotton Pest Control](https://www.youtube.com/watch?v=AieFCNubgVg)"
    ),
    "‡∞Æ‡∞ø‡∞∞‡∞™ (Chilli)": (
        "‡∞Æ‡∞ø‡∞∞‡∞™ ‡∞ö‡±á‡∞≤‡±ã ‡∞´‡∞Ç‡∞ó‡∞≤‡±ç ‡∞µ‡±ç‡∞Ø‡∞æ‡∞ß‡±Å‡∞≤ ‡∞®‡∞ø‡∞µ‡∞æ‡∞∞‡∞£‡∞ï‡±Å: carbendazim, azoxystrobin.\n"
        "[üå∂Ô∏è Chilli Disease Guide](https://www.youtube.com/watch?v=tDrx4Qgk1XE)"
    ),
    "‡∞ú‡±ä‡∞®‡±ç‡∞® (Jowar)": (
        "‡∞ú‡±ä‡∞®‡±ç‡∞®‡∞ï‡±Å neem spray ‡∞µ‡∞æ‡∞°‡∞æ‡∞≤‡∞ø.\n"
        "[üåΩ Jowar Farming Guide](https://www.youtube.com/watch?v=IdRYwD34HLs)"
    ),
    "‡∞∏‡±Ü‡∞®‡∞ó (Chana)": (
        "‡∞∏‡±Ü‡∞®‡∞ó‡∞ï‡±Å early blight ‡∞®‡∞ø‡∞µ‡∞æ‡∞∞‡∞£‡∞ï‡±Å Mancozeb ‡∞µ‡∞æ‡∞°‡∞Ç‡∞°‡∞ø.\n"
        "[ü•ú Chana Cultivation](https://www.youtube.com/watch?v=0sZo1gF8flE)"
    )
}

# Response function
def get_response(message):
    message = message.lower()
    if any(word in message for word in ["‡∞π‡∞æ‡∞Ø‡±ç", "‡∞π‡∞≤‡±ã", "‡∞®‡∞Æ‡∞∏‡±ç‡∞§‡±á"]):
        return "‡∞π‡∞≤‡±ã! ‡∞®‡±á‡∞®‡±Å ‡∞Æ‡±Ä ‡∞µ‡±ç‡∞Ø‡∞µ‡∞∏‡∞æ‡∞Ø ‡∞∏‡∞π‡∞æ‡∞Ø‡∞ï‡±Å‡∞°‡±Å. ‡∞é‡∞≤‡∞æ ‡∞∏‡∞π‡∞æ‡∞Ø‡∞Ç ‡∞ö‡±á‡∞Ø‡∞ó‡∞≤‡∞®‡±Å?"
    if any(word in message for word in ["‡∞ß‡∞®‡±ç‡∞Ø‡∞µ‡∞æ‡∞¶‡∞æ‡∞≤‡±Å", "‡∞ß‡∞®‡±ç‡∞Ø‡∞µ‡∞æ‡∞¶‡∞Ç", "‡∞•‡±ç‡∞Ø‡∞æ‡∞Ç‡∞ï‡±ç‡∞∏‡±ç"]):
        return "‡∞Æ‡±Ä‡∞ï‡±Å ‡∞∏‡±ç‡∞µ‡∞æ‡∞ó‡∞§‡∞Ç! ‡∞á‡∞Ç‡∞ï‡∞æ ‡∞è‡∞µ‡±à‡∞®‡∞æ ‡∞∏‡∞Ç‡∞¶‡±á‡∞π‡∞æ‡∞≤‡±Å ‡∞â‡∞®‡±ç‡∞®‡∞æ‡∞Ø‡∞æ?"

    for topic, info in knowledge_base.items():
        if topic != 'default':
            if any(keyword in message for keyword in info['keywords']):
                return info['response']
    return knowledge_base['default']['response']

# Layout
st.title("üåæ ‡∞∞‡±à‡∞§‡±Å ‡∞∏‡∞π‡∞æ‡∞Ø‡∞ï ‡∞ö‡∞æ‡∞ü‡±ç‚Äå‡∞¨‡∞æ‡∞ü‡±ç")
col1, col2 = st.columns([3, 1])

with col1:
    st.markdown("""
    <style>
    body, .stApp {
        background-color: #f5f5f5;
        color: #212121;
    }
    .chat-bubble {
        border-radius: 15px;
        padding: 10px 15px;
        margin: 10px 0;
        display: inline-block;
        max-width: 80%;
    }
    .user {
        background-color: #e3f2fd;
        margin-left: auto;
        text-align: right;
        border-bottom-right-radius: 5px;
    }
    .bot {
        background-color: #f1f1f1;
        margin-right: auto;
        text-align: left;
        border-bottom-left-radius: 5px;
    }
    </style>
    """, unsafe_allow_html=True)

    if "messages" not in st.session_state:
        st.session_state.messages = []

    user_input = st.chat_input("‡∞Æ‡±Ä ‡∞™‡±ç‡∞∞‡∞∂‡±ç‡∞®‡∞®‡±Å ‡∞á‡∞ï‡±ç‡∞ï‡∞° ‡∞ü‡±à‡∞™‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø...")
    if user_input:
        st.session_state.messages.append(("user", user_input))
        response = get_response(user_input)
        st.session_state.messages.append(("bot", response))

    for role, text in st.session_state.messages:
        css_class = "user" if role == "user" else "bot"
        st.markdown(f"<div class='chat-bubble {css_class}'>{text}</div>", unsafe_allow_html=True)

with col2:
    st.markdown("## üìå ‡∞™‡∞Ç‡∞ü‡∞≤‡±Å")
    for crop, tip in crop_tips.items():
        with st.expander(crop):
            st.markdown(tip, unsafe_allow_html=True)

