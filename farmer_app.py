import streamlit as st

st.set_page_config(page_title="‡∞∞‡±à‡∞§‡±Å ‡∞∏‡∞π‡∞æ‡∞Ø‡∞ï ‡∞ö‡∞æ‡∞ü‡±ç‚Äå‡∞¨‡∞æ‡∞ü‡±ç", layout="centered")

# Telugu knowledge base
knowledge_base = {
    "pests": {
        "keywords": ["‡∞™‡±Ü‡∞∏‡±ç‡∞ü‡±ç", "‡∞™‡±Å‡∞∞‡±Å‡∞ó‡±Å‡∞≤‡±Å", "‡∞á‡∞®‡±ç‡∞∏‡±Ü‡∞ï‡±ç‡∞ü‡±ç", "‡∞á‡∞®‡±ç‡∞´‡±Ü‡∞∏‡±ç‡∞ü‡±á‡∞∑‡∞®‡±ç"],
        "response": "‡∞∏‡∞æ‡∞ß‡∞æ‡∞∞‡∞£ ‡∞™‡±Å‡∞∞‡±Å‡∞ó‡±Å‡∞≤‡±ç‡∞≤‡±ã ‡∞Ü‡∞´‡∞ø‡∞°‡±ç‡∞∏‡±ç, ‡∞ö‡±Ü‡±ñ‡∞§‡±Ç‡∞®‡∞ø‡∞∞‡±Å‡∞ó‡±Å‡∞≤‡±Å, ‡∞¨‡±Ä‡∞ü‡±ç‚Äå‡∞≤‡±ç‡∞∏‡±ç ‡∞â‡∞Ç‡∞ü‡∞æ‡∞Ø‡∞ø. ‡∞ú‡±Ä‡∞µ ‡∞∏‡±Å‡∞∞‡∞ï‡±ç‡∞∑‡∞ø‡∞§ ‡∞®‡∞ø‡∞Ø‡∞Ç‡∞§‡±ç‡∞∞‡∞£‡∞ï‡±Å ‡∞®‡±Ä‡∞Æ‡±ç ‡∞Ü‡∞Ø‡∞ø‡∞≤‡±ç ‡∞≤‡±á‡∞¶‡∞æ ‡∞™‡±Å‡∞∞‡±Å‡∞ó‡±Å‡∞Æ‡∞Ç‡∞¶‡±Å ‡∞∏‡∞¨‡±ç‡∞¨‡±Å ‡∞µ‡∞æ‡∞°‡∞Ç‡∞°‡∞ø."
    },
    "diseases": {
        "keywords": ["‡∞µ‡±ç‡∞Ø‡∞æ‡∞ß‡∞ø", "‡∞´‡∞Ç‡∞ó‡∞∏‡±ç", "‡∞¨‡±ç‡∞≤‡±à‡∞ü‡±ç", "‡∞∞‡∞æ‡∞ü‡±ç", "‡∞µ‡∞ø‡∞≤‡±ç‡∞ü‡∞ø‡∞Ç‡∞ó‡±ç"],
        "response": "‡∞ö‡±Ü‡∞ü‡±ç‡∞≤‡±Å ‡∞™‡±ä‡∞Ç‡∞¶‡±á ‡∞µ‡±ç‡∞Ø‡∞æ‡∞ß‡±Å‡∞≤‡±Å ‡∞´‡∞Ç‡∞ó‡∞≤‡±ç, ‡∞¨‡±ç‡∞Ø‡∞æ‡∞ï‡±ç‡∞ü‡±Ä‡∞∞‡∞ø‡∞Ø‡∞≤‡±ç ‡∞≤‡±á‡∞¶‡∞æ ‡∞µ‡±à‡∞∞‡∞≤‡±ç ‡∞ï‡∞æ‡∞µ‡∞ö‡±ç‡∞ö‡±Å. ‡∞µ‡±ç‡∞Ø‡∞æ‡∞ß‡∞ø ‡∞®‡∞ø‡∞∞‡±ã‡∞ß‡∞ï ‡∞∞‡∞ï‡∞æ‡∞≤‡±Å, ‡∞™‡∞Ç‡∞ü ‡∞Æ‡∞æ‡∞∞‡±ç‡∞™‡∞ø‡∞°‡∞ø, ‡∞´‡∞Ç‡∞ó‡∞ø‡∞∏‡±à‡∞°‡±ç‡∞≤‡±Å ‡∞µ‡∞æ‡∞°‡∞°‡∞Ç ‡∞Æ‡∞Ç‡∞ö‡∞ø‡∞¶‡∞ø."
    },
    "fertilizer": {
        "keywords": ["‡∞´‡±Ü‡∞∞‡±ç‡∞ü‡∞ø‡∞≤‡±à‡∞ú‡∞∞‡±ç", "‡∞™‡±ã‡∞∑‡∞ï‡∞æ‡∞≤‡±Å", "‡∞é‡∞®‡±ç‚Äå‡∞™‡±Ä‡∞ï‡±á", "‡∞Æ‡∞®‡∞Ç", "‡∞ï‡∞æ‡∞Ç‡∞™‡±ã‡∞∏‡±ç‡∞ü‡±ç"],
        "response": "‡∞Æ‡∞ü‡±ç‡∞ü‡∞ø ‡∞™‡∞∞‡±Ä‡∞ï‡±ç‡∞∑ ‡∞ö‡±á‡∞∏‡±Å‡∞ï‡±ã‡∞µ‡∞°‡∞Ç ‡∞â‡∞§‡±ç‡∞§‡∞Æ‡∞Ç. ‡∞ú‡±Ä‡∞µ ‡∞™‡±ã‡∞∑‡∞ï‡∞æ‡∞≤‡±Å ‡∞ï‡±ã‡∞∏‡∞Ç ‡∞ï‡∞æ‡∞Ç‡∞™‡±ã‡∞∏‡±ç‡∞ü‡±ç ‡∞≤‡±á‡∞¶‡∞æ ‡∞ö‡±Ü‡∞§‡±ç‡∞§ ‡∞µ‡∞æ‡∞°‡∞Ç‡∞°‡∞ø. ‡∞é‡∞®‡±ç‚Äå‡∞™‡±Ä‡∞ï‡±á 10-10-10 ‡∞≤‡∞æ‡∞Ç‡∞ü‡∞ø ‡∞∏‡∞Ç‡∞§‡±Å‡∞≤‡∞ø‡∞§ ‡∞é‡∞∞‡±Å‡∞µ‡±Å‡∞≤‡±Å ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø."
    },
    "weather": {
        "keywords": ["‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£‡∞Ç", "‡∞µ‡∞∞‡±ç‡∞∑‡∞Ç", "‡∞ï‡∞∞‡±Å‡∞µ‡±Å", "‡∞ö‡∞≤‡∞ø‡∞ï‡∞æ‡∞≤‡∞Ç"],
        "response": "‡∞∏‡±ç‡∞•‡∞æ‡∞®‡∞ø‡∞ï ‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞ó‡∞Æ‡∞®‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø. ‡∞ï‡∞∞‡±Å‡∞µ‡±Å ‡∞ï‡±ã‡∞∏‡∞Ç ‡∞°‡±ç‡∞∞‡∞ø‡∞™‡±ç ‡∞á‡∞∞‡∞ø‡∞ó‡±á‡∞∑‡∞®‡±ç ‡∞µ‡∞æ‡∞°‡∞Ç‡∞°‡∞ø; ‡∞ö‡∞≤‡∞ø‡∞ï‡∞æ‡∞≤‡∞Ç ‡∞®‡∞ø‡∞µ‡∞æ‡∞∞‡∞£‡∞ï‡±Å ‡∞∑‡±Ä‡∞ü‡±ç‡∞≤‡±Å ‡∞≤‡±á‡∞¶‡∞æ ‡∞∏‡±ç‡∞™‡±ç‡∞∞‡∞ø‡∞Ç‡∞ï‡±ç‡∞≤‡∞∞‡±ç ‡∞µ‡∞æ‡∞°‡∞Ç‡∞°‡∞ø."
    },
    "crop selection": {
        "keywords": ["‡∞™‡∞Ç‡∞ü", "‡∞µ‡∞ø‡∞§‡±ç‡∞§‡∞®‡∞æ‡∞≤‡±Å", "‡∞é‡∞Ç‡∞™‡∞ø‡∞ï", "‡∞ï‡±É‡∞∑‡∞ø"],
        "response": "‡∞Æ‡∞ü‡±ç‡∞ü‡∞ø, ‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£‡∞Ç ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞Æ‡∞æ‡∞∞‡±ç‡∞ï‡±Ü‡∞ü‡±ç ‡∞°‡∞ø‡∞Æ‡∞æ‡∞Ç‡∞°‡±ç ‡∞Ü‡∞ß‡∞æ‡∞∞‡∞Ç‡∞ó‡∞æ ‡∞™‡∞Ç‡∞ü‡∞≤‡±Å ‡∞é‡∞Ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø."
    },
    "irrigation": {
        "keywords": ["‡∞®‡±Ä‡∞∞‡±Å", "‡∞á‡∞∞‡∞ø‡∞ó‡±á‡∞∑‡∞®‡±ç", "‡∞°‡±ç‡∞∞‡∞ø‡∞™‡±ç", "‡∞∏‡±ç‡∞™‡±ç‡∞∞‡∞ø‡∞Ç‡∞ï‡±ç‡∞≤‡∞∞‡±ç"],
        "response": "‡∞°‡±ç‡∞∞‡∞ø‡∞™‡±ç ‡∞≤‡±á‡∞¶‡∞æ ‡∞∏‡±ç‡∞™‡±ç‡∞∞‡∞ø‡∞Ç‡∞ï‡±ç‡∞≤‡∞∞‡±ç ‡∞µ‡∞æ‡∞°‡∞ü‡∞Ç ‡∞â‡∞§‡±ç‡∞§‡∞Æ‡∞Ç. ‡∞Æ‡∞ü‡±ç‡∞ü‡∞ø ‡∞§‡±á‡∞Æ‡∞®‡±Å ‡∞™‡∞∞‡∞ø‡∞∂‡±Ä‡∞≤‡∞ø‡∞∏‡±ç‡∞§‡±Ç ‡∞®‡±Ä‡∞∞‡±Å ‡∞∏‡∞Æ‡∞∞‡±ç‡∞•‡∞µ‡∞Ç‡∞§‡∞Ç‡∞ó‡∞æ ‡∞µ‡∞æ‡∞°‡∞Ç‡∞°‡∞ø."
    },
    "default": {
        "response": "‡∞ï‡±ç‡∞∑‡∞Æ‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø, ‡∞®‡±á‡∞®‡±Å ‡∞Æ‡±Ä ‡∞™‡±ç‡∞∞‡∞∂‡±ç‡∞®‡∞®‡±Å ‡∞Ö‡∞∞‡±ç‡∞•‡∞Ç ‡∞ö‡±á‡∞∏‡±Å‡∞ï‡±ã‡∞≤‡±á‡∞ï‡∞™‡±ã‡∞Ø‡∞æ‡∞®‡±Å. ‡∞¶‡∞Ø‡∞ö‡±á‡∞∏‡∞ø ‡∞™‡±Å‡∞∞‡±Å‡∞ó‡±Å‡∞≤‡±Å, ‡∞µ‡±ç‡∞Ø‡∞æ‡∞ß‡±Å‡∞≤‡±Å, ‡∞é‡∞∞‡±Å‡∞µ‡±Å‡∞≤‡±Å, ‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£‡∞Ç, ‡∞™‡∞Ç‡∞ü ‡∞é‡∞Ç‡∞™‡∞ø‡∞ï ‡∞≤‡±á‡∞¶‡∞æ ‡∞®‡±Ä‡∞ü‡∞ø‡∞™‡∞æ‡∞∞‡±Å‡∞¶‡∞≤ ‡∞ó‡±Å‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ø ‡∞Ö‡∞°‡∞ó‡∞Ç‡∞°‡∞ø."
    }
}


# Logic to get response
def get_response(message):
    message = message.lower()
    if any(word in message for word in ["‡∞π‡∞æ‡∞Ø‡±ç", "‡∞π‡∞≤‡±ã", "‡∞®‡∞Æ‡∞∏‡±ç‡∞§‡±á"]):
        return "‡∞π‡∞≤‡±ã! ‡∞®‡±á‡∞®‡±Å ‡∞Æ‡±Ä ‡∞µ‡±ç‡∞Ø‡∞µ‡∞∏‡∞æ‡∞Ø ‡∞∏‡∞π‡∞æ‡∞Ø‡∞ï‡±Å‡∞°‡±Å. ‡∞é‡∞≤‡∞æ ‡∞∏‡∞π‡∞æ‡∞Ø‡∞Ç ‡∞ö‡±á‡∞Ø‡∞ó‡∞≤‡∞®‡±Å?"
    if any(word in message for word in ["‡∞ß‡∞®‡±ç‡∞Ø‡∞µ‡∞æ‡∞¶‡∞æ‡∞≤‡±Å", "‡∞ß‡∞®‡±ç‡∞Ø‡∞µ‡∞æ‡∞¶‡∞Ç", "‡∞•‡±ç‡∞Ø‡∞æ‡∞Ç‡∞ï‡±ç‡∞∏‡±ç"]):
        return "‡∞Æ‡±Ä‡∞ï‡±Å ‡∞∏‡±ç‡∞µ‡∞æ‡∞ó‡∞§‡∞Ç! ‡∞á‡∞Ç‡∞ï‡∞æ ‡∞è‡∞µ‡±à‡∞®‡∞æ ‡∞∏‡∞Ç‡∞¶‡±á‡∞π‡∞æ‡∞≤‡±Å ‡∞â‡∞®‡±ç‡∞®‡∞æ‡∞Ø‡∞æ?"

    for topic, info in knowledge_base.items():
        if topic != 'default':
            if any(keyword in message for keyword in info['keywords']):
                return info['response']
    return knowledge_base['default']['response']


# Chat history
if "messages" not in st.session_state:
    st.session_state.messages = []

st.title("üåæ ‡∞∞‡±à‡∞§‡±Å ‡∞∏‡∞π‡∞æ‡∞Ø‡∞ï ‡∞ö‡∞æ‡∞ü‡±ç‚Äå‡∞¨‡∞æ‡∞ü‡±ç")

# Display previous messages
for msg in st.session_state.messages:
    role, text = msg
    with st.chat_message(role):
        st.markdown(text)

# Chat input
user_input = st.chat_input("‡∞Æ‡±Ä ‡∞™‡±ç‡∞∞‡∞∂‡±ç‡∞®‡∞®‡±Å ‡∞á‡∞ï‡±ç‡∞ï‡∞° ‡∞ü‡±à‡∞™‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø...")

if user_input:
    # Display user message
    st.chat_message("user").markdown(user_input)
    st.session_state.messages.append(("user", user_input))

    # Get bot response
    response = get_response(user_input)
    st.chat_message("assistant").markdown(response)
    st.session_state.messages.append(("assistant", response))
